
#### ---Algorithm Explanation--- ###

1.Initialize variables:

    n: number of airports (length of the input array)

    planes_hired: number of planes hired (start at 0)

    current_max_reach: farthest airport reachable with currently hired planes (start at 0)

    next_max_reach: farthest airport reachable if we hire one more plane (start at 0)


2.Special case: If n <= 1, return 0 (already at the destination)

3.Iterate through each airport i from 0 to n-1

    A. Check if we need to hire a new plane

    If i > current_max_reach, we can't reach the current airport with previously hired planes

    In this case

        If next_max_reach <= current_max_reach, it's impossible to proceed (return -1)

        Otherwise, hire a new plane

        Increment planes_hired
        Set current_max_reach to next_max_reach


    B. Update next_max_reach:

        Calculate the farthest airport reachable from the current airport: i + fuel[i]

        Set next_max_reach to the maximum of its current value and i + fuel[i]

    C. Check if we've reached or passed the last airport:

        If current_max_reach >= n - 1, return planes_hired


4.If we exit the loop without returning, it means we couldn't reach the last airport, so return -1

